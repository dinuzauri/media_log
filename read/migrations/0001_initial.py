# Generated by Django 5.2.1 on 2025-05-29 12:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("country", models.CharField(max_length=50)),
                ("nobel", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Award",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("about", models.CharField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("publish_year", models.IntegerField(null=True)),
                ("language", models.CharField(max_length=20, null=True)),
                ("page_count", models.IntegerField(null=True)),
                ("series_order", models.FloatField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="read.author"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookAward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("W", "won"), ("S", "shortlisted")], max_length=1
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="read.book"
                    ),
                ),
                (
                    "prize",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="read.award"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Book Awards",
                "unique_together": {("book", "prize", "year")},
            },
        ),
        migrations.AddField(
            model_name="book",
            name="awards",
            field=models.ManyToManyField(
                blank=True, through="read.BookAward", to="read.award"
            ),
        ),
        migrations.CreateModel(
            name="Edition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subtitle", models.CharField(blank=True, max_length=50, null=True)),
                ("page_count", models.IntegerField(blank=True, null=True)),
                ("publish_year", models.IntegerField(blank=True, null=True)),
                ("language", models.CharField(max_length=20, null=True)),
                (
                    "format",
                    models.CharField(
                        choices=[("P", "print"), ("D", "digital"), ("A", "audio")],
                        max_length=1,
                    ),
                ),
                ("isbn", models.CharField(blank=True, max_length=14, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("W", "want to read"),
                            ("P", "in progress"),
                            ("F", "finished"),
                        ],
                        default="W",
                        max_length=1,
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="editions",
                        to="read.book",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="genres",
            field=models.ManyToManyField(blank=True, to="read.genre"),
        ),
        migrations.CreateModel(
            name="Reading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_started", models.DateField(blank=True, null=True)),
                ("date_finished", models.DateField(blank=True, null=True)),
                (
                    "current_status",
                    models.CharField(
                        choices=[("R", "currently reading"), ("F", "finished")],
                        default="R",
                        max_length=1,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "edition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="readings",
                        to="read.edition",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=30)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="read.author"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Series",
            },
        ),
        migrations.AddField(
            model_name="book",
            name="series",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="read.series",
            ),
        ),
        migrations.CreateModel(
            name="ReadingLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                ("pages_read", models.IntegerField(blank=True, null=True)),
                ("percentage_read", models.IntegerField(blank=True, null=True)),
                ("resolved_page_count", models.IntegerField(editable=False)),
                ("computed_pages", models.IntegerField(editable=False)),
                ("page_difference", models.IntegerField(default=0)),
                (
                    "reading",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="read.reading",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Reading Logs",
                "ordering": ["date"],
                "indexes": [
                    models.Index(
                        fields=["reading", "date"],
                        name="read_readin_reading_25c64c_idx",
                    ),
                    models.Index(fields=["date"], name="read_readin_date_addedc_idx"),
                ],
            },
        ),
    ]
